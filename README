BOOTSTRAPPING
The Gluttonberg engine will not run a server by itself. Instead it needs to be
booted within a stubbed out Rails application. Thankfully, this is pretty easy
to do.

Say you have Gluttonberg stored in the following directory:

  ~/Code/gluttonberg

CD into the Code directory and generate a new Rails app:

  $ cd ~/Code
  $ rails new gluttonberg-test

Then inside the new rails app, open the Gemfile and edit it so it requires the
Gluttonberg engine.

  $ mvim gluttonberg-test/Gemfile

The require should look like this - assuming you use the same dirs as me:

  gem 'gluttonberg', :path => '../gluttonberg'
  
  bundle install 

If this is the first time you are bootstrapping gluttonberg, you will need to copy the migrations to the host app.
There is a simple generator that will do this for you.

  Change your config/database.yml file
  create your database by running rake db:create

 $ rails generate gluttonberg:installer

Then boot your Rails app.

  $ cd gluttonberg-test
  $ rails generate gluttonberg:installer
  $ rails server

Simple as that!

=======================================================================================
ASSET LIBRARY

First, you should install ImageMagick (www.imagemagick.org/) on your machine. Command line tools of ImageMagick must be in your system path. You can check this by running the command:

Customise your asset library settings in application.rb file. gluttonberg:installer will generate an example setting in readme file.

=======================================================================================

AUTHENTICATION

At this stage there is no signup form.
You will need to fire up a console and run the following commands (Change email, first name and password accordingly)

  user = User.new(:email => "admin@freerangefuture.com", :password => "password", :password_confirmation => "password" , :first_name => "first_name" , :role => "super_admin" )
  user.save
  
You will now be able to log in.

** require_user **
require_user is called on every admin page via the Gluttonberg::Admin::BaseController.

To skip require_user use
  
  skip_before_filter :require_user, :only => [:method]
  
=======================================================================================

SETTINGS
  rake gluttonberg:library:bootstrap
  rake gluttonberg:generate_default_locale
  rake gluttonberg:generate_or_update_default_settings
  


VERSIONING
======================================================================================

If you want to make your make versions of your model data. 
Put following line in your model

is_versioned

or 

is_versioned opts_hash # for more detail about opts hash Please read acts_as_versioned documentation

please add following lines in your application.rb file and customize according to your requirement

config.filter_parameters += [:password , :password_confirmation]
config.app_name = "Gluttonberg Test" # Human readable name of your application
config.localize = false # or true : if you want localized pages then please set  it true



BLOG
======================================================================================

rake jobs:work


EMAIL
======================================================================================
set this host_name for urls in email.
config.host_name
