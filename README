BOOTSTRAPPING
The Gluttonberg engine will not run a server by itself. Instead it needs to be
booted within a stubbed out Rails application. Thankfully, this is pretty easy
to do.

Say you have Gluttonberg stored in the following directory:

  ~/Code/gluttonberg

CD into the Code directory and generate a new Rails app:

  $ cd ~/Code
  $ rails new gluttonberg-test

Then inside the new rails app, open the Gemfile and edit it so it requires the
Gluttonberg engine.

  $ mvim gluttonberg-test/Gemfile

The require should look like this - assuming you use the same dirs as me:

  gem 'gluttonberg', :path => '../gluttonberg'

If this is the first time you are bootstrapping gluttonberg, you will need to copy the migrations to the host app.
There is a simple generator that will do this for you.

 $ rails generate gluttonberg:installer

Then boot your Rails app.

  $ cd gluttonberg-test
  $ rails generate gluttonberg:installer
  $ rails server

Simple as that!

=======================================================================================

AUTHENTICATION

At this stage there is no signup form.
You will need to fire up a console and run the following commands (Change email and password accordingly)

  user = User.new(:email => "admin@freerangefuture.com", :password => "password", :password_confirmation => "password")
  user.save
  
You will now be able to log in.

** require_user **
require_user is called on every admin page via the Gluttonberg::Admin::BaseController.

To skip require_user use
  
  skip_before_filter :require_user, :only => [:method]
  
=======================================================================================

SETTINGS
  rake gluttonberg:library:bootstrap
  rake gluttonberg:generate_default_dialect_and_locale
  rake gluttonberg:generate_or_update_default_settings
  